---
- name: Add and update packages
  include: apt.yml
  when: false

- name: Update Docker
  include: docker.yml

- name: Create dir ~/.kube
  file: path=/home/pi/.kube state=directory owner=pi group=users mode=0775

- name: Setup profile
  template: src=kubernetes_profile.sh dest=/etc/profile.d/kubernetes.sh mode=0644

- name: Check for an already generated token
  local_action: stat path={{ playbook_dir }}/k8s-token.txt
  register: k8s_token

- block:
  - name: Create a token from master
    command: kubeadm token generate
    register: kubeadm_token

  - name: Copy token to local file 'kubernetes-token'
    local_action: copy content={{ kubeadm_token.stdout }} dest={{ playbook_dir}}/k8s-token.txt

  when: k8s_token.stat.exists == false

- name: Register token as fact
  set_fact:
    k8s_token: "{{ lookup('file', playbook_dir + '/k8s-token.txt') }}"

- name: Check for a running cluster
  command: kubectl get nodes
  become_user: pi
  register: kubectl_result
  failed_when: kubectl_result.rc == 2

- set_fact: init_required={{ kubectl_result.rc == 1 or reset }}

- name: Reset if requested
  command: kubeadm reset
  when: reset
  tags:
    - reset

- block:
    - name: Setup master
      include: master.yml
      when: mode == "master"

    - name: Run kubeadm join on node
      command: kubeadm join --token {{ k8s_token }} master
      when: mode == "node"

    - name: Copy kube login config to ~/.kube/config
      copy: src={{ playbook_dir}}/k8s-pi-cluster.cfg dest=/home/pi/.kube/config owner=pi group=users

  when: init_required == true
